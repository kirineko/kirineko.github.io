import{_ as e,c as p,a as n,b as a,e as i,d as h,r as t,o as r}from"./app-BVMcoHqx.js";const d={};function c(k,s){const l=t("VPIcon");return r(),p("div",null,[s[6]||(s[6]=n('<h2 id="课程简介" tabindex="-1"><a class="header-anchor" href="#课程简介"><span>课程简介</span></a></h2><p>本教程专注于现代C++编程，完全基于C++11及以后的标准，摒弃传统C++的过时做法，采用现代C++的最佳实践。</p><h2 id="课程大纲" tabindex="-1"><a class="header-anchor" href="#课程大纲"><span>课程大纲</span></a></h2><h3 id="第1章-现代c-基础" tabindex="-1"><a class="header-anchor" href="#第1章-现代c-基础"><span>第1章：现代C++基础</span></a></h3><ul><li>1.1 现代C++概述与环境搭建</li><li>1.2 auto关键字与类型推导</li><li>1.3 统一初始化语法</li><li>1.4 nullptr与类型安全</li><li>1.5 范围for循环</li></ul><h3 id="第2章-智能指针与内存管理" tabindex="-1"><a class="header-anchor" href="#第2章-智能指针与内存管理"><span>第2章：智能指针与内存管理</span></a></h3><ul><li>2.1 RAII原则</li><li>2.2 unique_ptr：独占所有权</li><li>2.3 shared_ptr：共享所有权</li><li>2.4 weak_ptr：打破循环引用</li><li>2.5 make_unique和make_shared</li></ul><h3 id="第3章-移动语义与完美转发" tabindex="-1"><a class="header-anchor" href="#第3章-移动语义与完美转发"><span>第3章：移动语义与完美转发</span></a></h3>',8)),a("ul",null,[s[2]||(s[2]=a("li",null,"3.1 左值与右值",-1)),s[3]||(s[3]=a("li",null,"3.2 移动构造函数与移动赋值",-1)),a("li",null,[s[0]||(s[0]=i("3.3 std")),h(l,{provider:"iconify",name:"move与std"}),s[1]||(s[1]=i("forward"))]),s[4]||(s[4]=a("li",null,"3.4 完美转发",-1)),s[5]||(s[5]=a("li",null,"3.5 移动语义的性能优化",-1))]),s[7]||(s[7]=n(`<h3 id="第4章-lambda表达式与函数对象" tabindex="-1"><a class="header-anchor" href="#第4章-lambda表达式与函数对象"><span>第4章：Lambda表达式与函数对象</span></a></h3><ul><li>4.1 Lambda表达式基础</li><li>4.2 捕获列表详解</li><li>4.3 std::function与可调用对象</li><li>4.4 Lambda与STL算法</li><li>4.5 泛型Lambda (C++14)</li></ul><h3 id="第5章-现代stl容器与算法-✅" tabindex="-1"><a class="header-anchor" href="#第5章-现代stl容器与算法-✅"><span>第5章：现代STL容器与算法 ✅</span></a></h3><ul><li>5.1 新增容器：array, unordered_map, unordered_set</li><li>5.2 容器的emplace操作</li><li>5.3 现代算法库</li><li>5.4 范围算法 (C++20预览)</li><li>5.5 迭代器适配器</li></ul><h3 id="第6章-并发编程-✅" tabindex="-1"><a class="header-anchor" href="#第6章-并发编程-✅"><span>第6章：并发编程 ✅</span></a></h3><ul><li>6.1 std::thread基础</li><li>6.2 互斥量与锁</li><li>6.3 条件变量</li><li>6.4 原子操作</li><li>6.5 异步编程：future与promise</li></ul><h3 id="第7章-模板元编程现代化-✅" tabindex="-1"><a class="header-anchor" href="#第7章-模板元编程现代化-✅"><span>第7章：模板元编程现代化 ✅</span></a></h3><ul><li>7.1 变参模板</li><li>7.2 模板别名</li><li>7.3 constexpr编程</li><li>7.4 SFINAE与enable_if</li><li>7.5 概念 (C++20预览)</li></ul><h3 id="第8章-异常安全与错误处理-✅" tabindex="-1"><a class="header-anchor" href="#第8章-异常安全与错误处理-✅"><span>第8章：异常安全与错误处理 ✅</span></a></h3><ul><li>8.1 异常安全保证</li><li>8.2 RAII与异常</li><li>8.3 noexcept规范</li><li>8.4 std::optional (C++17)</li><li>8.5 错误处理最佳实践</li></ul><h3 id="第9章-现代类设计-✅" tabindex="-1"><a class="header-anchor" href="#第9章-现代类设计-✅"><span>第9章：现代类设计 ✅</span></a></h3><ul><li>9.1 Rule of Zero/Three/Five</li><li>9.2 默认与删除函数</li><li>9.3 委托构造函数</li><li>9.4 继承构造函数</li><li>9.5 final与override关键字</li></ul><h3 id="第10章-实战项目-✅" tabindex="-1"><a class="header-anchor" href="#第10章-实战项目-✅"><span>第10章：实战项目 ✅</span></a></h3><ul><li>10.1 现代C++设计模式</li><li>10.2 性能优化技巧</li><li>10.3 代码组织与项目结构</li><li>10.4 单元测试与现代工具链</li><li>10.5 综合项目实战</li></ul><h3 id="第11章-c-17核心特性-✅" tabindex="-1"><a class="header-anchor" href="#第11章-c-17核心特性-✅"><span>第11章：C++17核心特性 ✅</span></a></h3><ul><li>11.1 结构化绑定 (Structured Bindings)</li><li>11.2 std::string_view</li><li>11.3 std::variant</li><li>11.4 std::optional深入</li><li>11.5 std::any</li></ul><h3 id="第12章-c-20-concepts-✅" tabindex="-1"><a class="header-anchor" href="#第12章-c-20-concepts-✅"><span>第12章：C++20 Concepts ✅</span></a></h3><ul><li>12.1 Concepts基础</li><li>12.2 标准库Concepts</li><li>12.3 自定义Concepts</li><li>12.4 requires表达式</li><li>12.5 约束模板的方式</li></ul><h3 id="第13章-c-20其他重要特性-✅" tabindex="-1"><a class="header-anchor" href="#第13章-c-20其他重要特性-✅"><span>第13章：C++20其他重要特性 ✅</span></a></h3><ul><li>13.1 三路比较运算符 (Spaceship Operator)</li><li>13.2 格式化库 (Format Library)</li><li>13.3 范围库 (Ranges)</li><li>13.4 consteval 和 constinit</li><li>13.5 协程 (Coroutines)</li><li>13.6 其他新特性</li></ul><h2 id="学习目标" tabindex="-1"><a class="header-anchor" href="#学习目标"><span>学习目标</span></a></h2><p>完成本教程后，您将能够：</p><ol><li>熟练使用现代C++特性编写高效、安全的代码</li><li>理解并应用RAII、移动语义等核心概念</li><li>掌握现代C++的内存管理和并发编程</li><li>编写符合现代C++最佳实践的生产级代码</li></ol><h2 id="前置要求" tabindex="-1"><a class="header-anchor" href="#前置要求"><span>前置要求</span></a></h2><ul><li>基本的编程概念理解</li><li>建议有一定的C或其他编程语言基础</li><li>不需要传统C++经验（我们将直接学习现代方式）</li></ul><h2 id="开发环境" tabindex="-1"><a class="header-anchor" href="#开发环境"><span>开发环境</span></a></h2><ul><li>C++17或更高版本的编译器 (推荐GCC 9+, Clang 10+, MSVC 2019+)</li><li>CMake 3.15+ (可选，也可使用Makefile)</li><li>推荐IDE：VS Code, CLion, Visual Studio</li></ul><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始"><span>快速开始</span></a></h2><h3 id="方法1-使用makefile-推荐" tabindex="-1"><a class="header-anchor" href="#方法1-使用makefile-推荐"><span>方法1：使用Makefile (推荐)</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 编译所有示例</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">make</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> all</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 运行所有示例</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">make</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run-all</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 运行特定章节</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">make</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run-chapter1</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">make</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run-chapter2</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">make</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run-chapter3</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">make</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run-chapter4</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">make</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run-chapter11</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">make</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run-chapter12</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">make</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run-chapter13</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 查看帮助</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">make</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> help</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="方法2-使用构建脚本" tabindex="-1"><a class="header-anchor" href="#方法2-使用构建脚本"><span>方法2：使用构建脚本</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Linux/macOS</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">./build_and_run.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># Windows</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">build_and_run.bat</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="方法3-手动编译" tabindex="-1"><a class="header-anchor" href="#方法3-手动编译"><span>方法3：手动编译</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 编译单个示例</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">g++</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -std=c++17</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -Wall</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -Wextra</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -O2</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> chapter01/examples.cpp</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -o</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> chapter01_examples</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 运行</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">./chapter01_examples</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="项目结构" tabindex="-1"><a class="header-anchor" href="#项目结构"><span>项目结构</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>cpp_learn/</span></span>
<span class="line"><span>├── README.md                    # 项目概述</span></span>
<span class="line"><span>├── LEARNING_GUIDE.md           # 详细学习指南</span></span>
<span class="line"><span>├── Makefile                    # 构建文件</span></span>
<span class="line"><span>├── CMakeLists.txt             # CMake配置</span></span>
<span class="line"><span>├── build_and_run.sh           # Linux/macOS构建脚本</span></span>
<span class="line"><span>├── build_and_run.bat          # Windows构建脚本</span></span>
<span class="line"><span>├── chapter01/                 # 第1章：现代C++基础</span></span>
<span class="line"><span>│   ├── README.md</span></span>
<span class="line"><span>│   └── examples.cpp</span></span>
<span class="line"><span>├── chapter02/                 # 第2章：智能指针与内存管理</span></span>
<span class="line"><span>│   ├── README.md</span></span>
<span class="line"><span>│   └── smart_pointers.cpp</span></span>
<span class="line"><span>├── chapter03/                 # 第3章：移动语义与完美转发</span></span>
<span class="line"><span>│   ├── README.md</span></span>
<span class="line"><span>│   └── move_semantics.cpp</span></span>
<span class="line"><span>├── chapter04/                 # 第4章：Lambda表达式与函数对象</span></span>
<span class="line"><span>│   ├── README.md</span></span>
<span class="line"><span>│   └── lambda_examples.cpp</span></span>
<span class="line"><span>├── chapter05/                 # 第5章：现代STL容器与算法</span></span>
<span class="line"><span>│   ├── README.md</span></span>
<span class="line"><span>│   └── stl_examples.cpp</span></span>
<span class="line"><span>├── chapter06/                 # 第6章：并发编程</span></span>
<span class="line"><span>│   ├── README.md</span></span>
<span class="line"><span>│   └── concurrency_examples.cpp</span></span>
<span class="line"><span>├── chapter07/                 # 第7章：模板元编程现代化</span></span>
<span class="line"><span>│   ├── README.md</span></span>
<span class="line"><span>│   └── template_examples.cpp</span></span>
<span class="line"><span>├── chapter08/                 # 第8章：异常安全与错误处理</span></span>
<span class="line"><span>│   └── README.md</span></span>
<span class="line"><span>├── chapter09/                 # 第9章：现代类设计</span></span>
<span class="line"><span>│   └── README.md</span></span>
<span class="line"><span>├── chapter10/                 # 第10章：实战项目</span></span>
<span class="line"><span>│   └── README.md</span></span>
<span class="line"><span>├── chapter11/                 # 第11章：C++17核心特性</span></span>
<span class="line"><span>│   ├── README.md</span></span>
<span class="line"><span>│   └── cpp17_features.cpp</span></span>
<span class="line"><span>├── chapter12/                 # 第12章：C++20 Concepts</span></span>
<span class="line"><span>│   ├── README.md</span></span>
<span class="line"><span>│   └── concepts_examples.cpp</span></span>
<span class="line"><span>└── chapter13/                 # 第13章：C++20其他重要特性</span></span>
<span class="line"><span>    ├── README.md</span></span>
<span class="line"><span>    └── cpp20_features.cpp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><p><em>注：本教程将持续更新，跟进C++标准的发展</em></p>`,38))])}const u=e(d,[["render",c]]),m=JSON.parse('{"path":"/cpp/2fymxx9s/","title":"序章","lang":"zh-CN","frontmatter":{"title":"序章","createTime":"2025/05/28 00:56:11","permalink":"/cpp/2fymxx9s/"},"readingTime":{"minutes":3.72,"words":1117},"git":{"createdTime":1748366234000,"updatedTime":1748366234000,"contributors":[{"name":"kirineko","username":"kirineko","email":"kirineko@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/kirineko?v=4","url":"https://github.com/kirineko"}]},"filePathRelative":"notes/cpp/chapter0.md","headers":[]}');export{u as comp,m as data};
